TOPIC
    about_StudioShell

COPYRIGHT
    Copyright (c) 2011 Code Owls LLC
 
    Permission is hereby granted, free of charge, to any person obtaining a copy 
	of this software and associated documentation files (the "Software"), 
	to deal in the Software without restriction, including without limitation 
	the rights to use, copy, modify, merge, publish, distribute, sublicense, 
	and/or sell copies of the Software, and to permit persons to whom the 
 	Software is furnished to do so, subject to the following conditions:
 
    The above copyright notice and this permission notice shall be included in 
	all copies or substantial portions of the Software.
 
    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL 
	THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
	FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER 
	DEALINGS IN THE SOFTWARE. 
 

SHORT DESCRIPTION
    Deeply integrates Visual Studio extensibility features with a PowerShell
    session.

LONG DESCRIPTION
	
	StudioShell supports the following features:
	
  Profile Scripts 
	
	For more information type:
		
		get-help about_StudioShell_Profiles
		
  Solution Modules
  
	For more information type:
		
		get-help about_StudioShell_Solution_Modules
		
  DTE Drive
	
	For more information type:
		
		get-help about_StudioShell_Drives
	
  PowerShell-based Commands
  
	For more information type:
		
		get-help about_StudioShell_Commands

  Simple Data Visualizations
  
 	For more information type:
		
		get-help about_StudioShell_Data_Panes

  
  Automatic Variables
  
	For more information type:
		
		get-help about_StudioShell_Variables
		
		
USING STUDIOSHELL

	StudioShell provides two consoles, an integrated console window that
	docks in the Visual Studio UI, and the default process console that behaves
	like the standard PowerShell executable.  However, you can use StudioShell 
	from almost any PowerShell host available in Visual Studio.
	
  From the StudioShell console:
	
		You do not need to do anything to use StudioShell features from one of 
		the included consoles.  These consoles load the StudioShell module
		automatically.
	
  From NuGet, PowerGUI VSX, or other Visual Studio PowerShell hosts:
	
		With the StudioShell add-in loaded, open your console and type:
		
			import-module studioshell
		
		This will load the studioshell module into your PowerShell host, run
		any profiles and initialization scripts necessary, and set up the DTE
		provider inside of your chosen host.
		
QUICK EXAMPLE

	1) Open a StudioShell console using the instructions in USING STUDIOSHELL.
	2) Open a solution you've been working on recently.
	3) In the StudioShell console, type the following (note that the example spans
		several lines for readability, but you should enter this as one line):
	
		dir dte:/solution/projects -recurse | 
			where { $_ -match 'class' } |
			set-itemproperty -name Comment -value "updated by StudioShell"
			
	This will place a comment before every class in your solution.

SEE ALSO
    http://studioshell.codeplex.com
    http://www.studioshell.org
    about_StudioShell_Profiles
    about_StudioShell_Settings
    about_StudioShell_Drives
    about_StudioShell_Variables
    about_StudioShell_Data_Panes
    about_StudioShell_Commands
    about_StudioShell_Requirements

