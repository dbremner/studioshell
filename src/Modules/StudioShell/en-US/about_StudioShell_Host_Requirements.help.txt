TOPIC
    about_StudioShell_Host_Requirements

SHORT DESCRIPTION
    StudioShell is designed to use used from a variety of suitable hosts.
    This topic outlines the requirements of a suitable host.

LONG DESCRIPTION
	StudioShell is not tightly coupled to its own console.  Instead it is 
	meant to be used from any PowerShell console, allowing you to take
	advantage of the powerfull features in a variety of situations.
	
	Note that the session using StudioShell must have the following properties:
	
	1. the machine on which the session is running has 
		Visual Studio 2008 or 2010 installed.  
	2. the Visual Studio process has the StudioShell add-in loaded;
	3. the PowerShell host's System.Management.Automation.Host.PSHost 
		implementation supports the IHostSupportsInteractiveSession 
		interface;  specifically, the Runspace property is supported, 
		but the runspace pushing methods and properties are optional.
		
VERIFYING YOUR HOST
	To verify if a PowerShell host can support StudioShell, open the host
	console and type the following command:
	
		test-studioShellHost.ps1
		
	If the command fails to execute, or if the command executes and returns 
	false, your host will not be able to load StudioShell.
	
USING STUDIOSHELL IN OTHER HOSTS (e.g., NuGet, PowerShell.exe)
	Once you verify that your host can use StudioShell, you can add StudioShell
	features to your host by typing the following:
	
		import-module StudioShell
		
	Note that several StudioShell features are enabled by default in the StudioShell
	host, but are disabled by default in other hosts.
	
	Specifically, the StudioShell host user profile script is NOT loaded when 
	the StudioShell module is imported directly.  Any customization in this
	profile script must be executed explicitly by dot-sourcing the profile
	script:
	
		. ~/CodeOwlsLLC.StudioShell/profile.ps1
	
	In addition, solution modules are not automatically loaded and unloaded
	when using the StudioShell module in other hosts.  To enable this feature,
	you can run the following script after importing the StudioShell module:
	
		. ( get-module StudioShell | `
			select -expand Path | `
			split-path -parent | `
			join-path -child '..\InitializationScripts\register-solutionevents.ps1' )
		
SEE ALSO
	about_StudioShell    
	test-studioShellHost.ps1
	start-studioShell.ps1
	about_StudioShell_Solution_Modules